.TH "headers/DisplayCode.h" 3 "Sun Jun 2 2019" "SANDAL2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
headers/DisplayCode.h \- Contains display code and list of display codes\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBDisplayCode\fP"
.br
.RI "Display code containing the plan and a flag to indicate if it is displaied\&. "
.ti -1c
.RI "struct \fBListDisplayCode\fP"
.br
.RI "List of display codes\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBDisplayCode\fP \fBDisplayCode\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBListDisplayCode\fP * \fBinitListDisplayCode\fP ()"
.br
.RI "Initialise an empty list of display codes\&. "
.ti -1c
.RI "void \fBfreeListDisplayCode\fP (\fBListDisplayCode\fP *l)"
.br
.RI "Free the memory of a list of display codes\&. "
.ti -1c
.RI "int \fBaddDisplayCode\fP (\fBListDisplayCode\fP *l, int code, int isDisplaied, int plan)"
.br
.RI "Add of a display code to a list of display code\&. "
.ti -1c
.RI "int \fBdelDisplayCode\fP (\fBListDisplayCode\fP *l, int code)"
.br
.RI "Remove a display code to a list of display code\&. "
.in -1c
.SH "Detailed Description"
.PP 
Contains display code and list of display codes\&. 


.PP
\fBAuthor:\fP
.RS 4
Baptiste PRUNIER (KLEVH) 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int addDisplayCode (\fBListDisplayCode\fP * l, int code, int isDisplaied, int plan)"

.PP
Add of a display code to a list of display code\&. 
.PP
\fBParameters:\fP
.RS 4
\fIl\fP : list of display codes 
.br
\fIcode\fP : display code of the \fBDisplayCode\fP 
.br
\fIisDisplaied\fP : flag to tell if the element is displaied or not 
.br
\fIplan\fP : plan linked to the display code 
.RE
.PP
\fBReturns:\fP
.RS 4
1 if it could not be done, 0 if it could 
.RE
.PP

.SS "int delDisplayCode (\fBListDisplayCode\fP * l, int code)"

.PP
Remove a display code to a list of display code\&. 
.PP
\fBParameters:\fP
.RS 4
\fIl\fP : list of display codes 
.br
\fIcode\fP : display code to be removed 
.RE
.PP
\fBReturns:\fP
.RS 4
0 if it succeeded, 1 if not 
.RE
.PP

.SS "void freeListDisplayCode (\fBListDisplayCode\fP * l)"

.PP
Free the memory of a list of display codes\&. 
.PP
\fBParameters:\fP
.RS 4
\fIl\fP : list of display codes 
.RE
.PP

.SS "\fBListDisplayCode\fP* initListDisplayCode ()"

.PP
Initialise an empty list of display codes\&. 
.PP
\fBReturns:\fP
.RS 4
an empty list of display codes 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for SANDAL2 from the source code\&.
