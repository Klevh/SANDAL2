.TH "headers/Font.h" 3 "Sun Jun 2 2019" "SANDAL2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
headers/Font.h \- Information about TTF objects\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'Window\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBFont\fP"
.br
.RI "Informations about font\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSANDAL2_SOLID\fP   0"
.br
.ti -1c
.RI "#define \fBSANDAL2_SHADED\fP   1"
.br
.ti -1c
.RI "#define \fBSANDAL2_BLENDED\fP   2"
.br
.ti -1c
.RI "#define \fBSANDAL2_BOLD\fP   TTF_STYLE_BOLD"
.br
.ti -1c
.RI "#define \fBSANDAL2_ITALIC\fP   TTF_STYLE_ITALIC"
.br
.ti -1c
.RI "#define \fBSANDAL2_UNDERLINE\fP   TTF_STYLE_UNDERLINE"
.br
.ti -1c
.RI "#define \fBSANDAL2_STRIKETHROUGH\fP   TTF_STYLE_STRIKETHROUGH"
.br
.ti -1c
.RI "#define \fBSANDAL2_NORMAL\fP   TTF_STYLE_NORMAL"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBFont\fP * \fBcreateFont\fP (const char *fontPath, const char *texte, int color[4], int quality)"
.br
.RI "generate a \fBFont\fP using the path to the font, the text and the color of the text (use the window's background font as background color for Shaded quality) "
.ti -1c
.RI "void \fBfreeFont\fP (\fBFont\fP *font)"
.br
.RI "free the memory of a \fBFont\fP "
.ti -1c
.RI "int \fBactualizeTextFont\fP (\fBFont\fP *font, int isScripted)"
.br
.RI "actualize the text to cript it or uncript it "
.ti -1c
.RI "int \fBsetTextFont\fP (\fBFont\fP *font, const char *text)"
.br
.RI "actualize the text of a \fBFont\fP "
.ti -1c
.RI "int \fBsetColorFont\fP (\fBFont\fP *font, int color[4])"
.br
.RI "actualize the color of the \fBFont\fP "
.ti -1c
.RI "int \fBsetStyleFont\fP (\fBFont\fP *font, int style)"
.br
.RI "set the text's font style "
.ti -1c
.RI "int \fBgetStyleFont\fP (\fBFont\fP *font, int *style)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBListWindow\fP * \fB_windows_SANDAL2\fP"
.br
.RI "List of the windows WARNING : do not touch it \&.\&.\&. trust me\&. "
.in -1c
.SH "Detailed Description"
.PP 
Information about TTF objects\&. 


.PP
\fBAuthor:\fP
.RS 4
Baptiste PRUNIER (KLEVH) 
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define SANDAL2_BLENDED   2"
Type of text's texture rendering (see SDL2's TTF_RendreText_Blended) 
.SS "#define SANDAL2_BOLD   TTF_STYLE_BOLD"
Text font style : bold 
.SS "#define SANDAL2_ITALIC   TTF_STYLE_ITALIC"
Text font style : italic 
.SS "#define SANDAL2_NORMAL   TTF_STYLE_NORMAL"
Text font style : normal 
.SS "#define SANDAL2_SHADED   1"
Type of text's texture rendering (see SDL2's TTF_RendreText_Shaded) 
.SS "#define SANDAL2_SOLID   0"
Type of text's texture rendering (see SDL2's TTF_RendreText_Solid) 
.SS "#define SANDAL2_STRIKETHROUGH   TTF_STYLE_STRIKETHROUGH"
Text font style : strikethrough 
.SS "#define SANDAL2_UNDERLINE   TTF_STYLE_UNDERLINE"
Text font style : underline 
.SH "Function Documentation"
.PP 
.SS "int actualizeTextFont (\fBFont\fP * font, int isScripted)"

.PP
actualize the text to cript it or uncript it 
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP : the font to be actualize 
.br
\fIisScripted\fP : 0 if the text should be uncripted, 1 for cripted 
.RE
.PP
\fBReturns:\fP
.RS 4
1 if there was an error, 0 if not 
.RE
.PP

.SS "\fBFont\fP* createFont (const char * fontPath, const char * texte, int color[4], int quality)"

.PP
generate a \fBFont\fP using the path to the font, the text and the color of the text (use the window's background font as background color for Shaded quality) 
.PP
\fBParameters:\fP
.RS 4
\fIfontPath\fP : path of the font 
.br
\fItexte\fP : text of the object 
.br
\fIcolor\fP : color of the text 
.br
\fIquality\fP : quality of the texture (SANDAL2_SOLID, SANDAL2_SHADED or SANDAL2_BLENDED) 
.RE
.PP
\fBReturns:\fP
.RS 4
NULL if the object was not initialised, if not, the object 
.RE
.PP

.SS "void freeFont (\fBFont\fP * font)"

.PP
free the memory of a \fBFont\fP 
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP : the \fBFont\fP to be freed 
.RE
.PP

.SS "int getStyleFont (\fBFont\fP * font, int * style)"
get the text's font style 
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP : the text to get the font style 
.br
\fIstyle\fP : where to store the style 
.RE
.PP
\fBReturns:\fP
.RS 4
1 if there was an error, 0 if not 
.RE
.PP

.SS "int setColorFont (\fBFont\fP * font, int color[4])"

.PP
actualize the color of the \fBFont\fP 
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP : the font to be actualize 
.br
\fIcolor\fP : new color 
.RE
.PP
\fBReturns:\fP
.RS 4
1 if there was an error, 0 if not 
.RE
.PP

.SS "int setStyleFont (\fBFont\fP * font, int style)"

.PP
set the text's font style 
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP : the text to be modified 
.br
\fIstyle\fP : the style to apply 
.RE
.PP
\fBReturns:\fP
.RS 4
1 if there was an error, 0 if not 
.RE
.PP

.SS "int setTextFont (\fBFont\fP * font, const char * text)"

.PP
actualize the text of a \fBFont\fP 
.PP
\fBParameters:\fP
.RS 4
\fIfont\fP : the font to be actualize 
.br
\fItext\fP : the new text 
.RE
.PP
\fBReturns:\fP
.RS 4
1 if there was an error, 0 if not 
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "\fBListWindow\fP* _windows_SANDAL2"

.PP
List of the windows WARNING : do not touch it \&.\&.\&. trust me\&. List of the windows WARNING : do not touch it \&.\&.\&. trust me\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for SANDAL2 from the source code\&.
